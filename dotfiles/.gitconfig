[user]
	email = terrance@missingtoken.net
	name = Terrance Kennedy
[push]
	# Configures the behavior of running `git push` without a branch name. A
	# value of 'simple' pushes the current branch to the upstream branch of the
	# same name. This is the default in git 2.0 and above.
	default = simple
	autoSetupRemote = true

[alias]
	# Returns the default branch used by the given remote (defaulting to origin)
	default-branch = "!f() { \
		local remote=\"${1:-origin}\"; \
		basename \"$(git rev-parse --abbrev-ref \"$remote\"/HEAD)\"; \
	}; \
	f"
	# Returns the name of the current branch.
	current-branch = "rev-parse --abbrev-ref HEAD"
	# Deletes all local branches that are fully merged into the given branch (defaulting to the default branch)
	# Works with branches that have been squash-and-merged. Based on https://github.com/not-an-aardvark/git-delete-squashed
	delete-merged = "!f() { \
		local remote=\"${1:-origin}\"; \
		local default_branch=\"${2:-$(git default-branch $remote)}\"; \
		local ignore_branch=\"${3:-$(git current-branch)}\"; \
		git checkout --quiet $default_branch && \
		git branch --merged $default_branch | grep -vE \"\\*|$ignore_branch\" | xargs -n 1 git branch -d; \
		git for-each-ref refs/heads/ \"--format=%(refname:short)\" | while read branch; do \
			[[ $branch == $ignore_branch ]] && continue; \
			mergeBase=$(git merge-base $default_branch $branch); \
			if [[ $(git cherry $default_branch $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == \"-\"* ]]; then \
				git branch -D $branch; \
			fi; \
		done; \
	}; f"
	# Fetches the latest changes from the given remote (defaulting to origin), updates the default branch, and deletes all local branches that have been merged
	update = "!f() { \
		local remote=\"${1:-origin}\"; \
		local default_branch=\"$(git default-branch $remote)\"; \
		local current_branch=\"$(git current-branch)\"; \
		git delete-merged-remote $remote $default_branch; \
		git checkout --quiet \"$default_branch\" && \
		git merge --ff-only \"$remote/$default_branch\" && \
		git delete-merged \"$remote\" \"$default_branch\" \"$current_branch\"; \
		git checkout --quiet \"$current_branch\"; \
	}; f"

# https://git-scm.com/docs/git-diff#Documentation/git-diff.txt
[diff]
	# The histogram algorithm produces better looking diffs at the cost of CPU.
	algorithm = histogram
	# Differentiate moved blocks of text by using different colors
	colorMoved = default

[core]
	excludesfile = ~/.gitignore_global

[pager]
	# Disable pager when calling git branch
	branch = false

[merge]
	# set "lvim" as tool for merging
	tool = lvim

[mergetool]
	# automatically launch merge tool without displaying a prompt
	prompt = false
	# Disable saving .orig backup of file with conflict markers after merging
	keepBackup = false

[mergetool "lvim"]
	cmd = lvim -f -c \"Gdiffsplit!\" \"$MERGED\"

[pull]
	ff = only

[init]
	defaultBranch = main

# Use delta as syntax highlighter for git paging
[core]
	pager = delta

[interactive]
	diffFilter = delta --color-only --features='interactive gruvbox'

[delta]
	# Named groups of settings in delta
	features = gruvbox
	# Map git provided colors for moved blocks of text to color from theme
	map-styles = bold purple => syntax magenta, bold cyan => syntax blue
	# Use line numbers in diffs
	line-numbers = true
	# Don't need hunk headers if using line numbers
	hunk-header-style = omit
	file-decoration-style = blue

[delta "interactive"]
	keep-plus-minus-markers = false

[delta "gruvbox"]
	syntax-theme = gruvbox-dark
	# Set line number +, - styles to match gruvbox's green and red
	line-numbers-plus-style = "#98971a"
	line-numbers-minus-style = "#cc241d"

	# Color mixing the gruvbox dark hard contrast background with green and red
	# foreground colors.
	# 15% #98971a + 85% #1d2021
	plus-style = syntax "#2f3220"
	# 40% #98971a + 60% #1d2021
	plus-emph-style = syntax "#4e501e"
	# 15% #cc241d + 85% #1d2021
	minus-style = syntax "#372120"
	# 40% #cc241d + 60% #1d2021
	minus-emph-style = syntax "#63221f"

[include]
	path = ~/.config/git/local.gitconfig
